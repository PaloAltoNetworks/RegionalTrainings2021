{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "comments": "This template is released under an as-is, it is used for the PS Regional Summit 2020.",
    "author": "Torsten Stern (tostern@paloaltonetworks.com)"
  },
  "variables": {
    "COMMENT_global": "GLOBAL VARIABLES SHARED AMONG DEPLOYED RESOURCES",
    "global_fw_adminUsername": "paloalto",
    "global_fw_adminPassword": "PanPassword123!",
    "global_spoke1_resource_group": "[resourceGroup().name]",
    "global_spoke1_vnet_name": "spoke1-vnet",
    "global_spoke1_subnet_name": "spoke1-subnet1",
    "global_spoke_vm_vmSize": "Standard_B1s",
    "global_spoke_vm_publisher": "Canonical",
    "global_spoke_vm_offer": "UbuntuServer",
    "global_spoke_vm_sku": "18.04-LTS",
    "global_spoke_vm_version": "latest",
    "global_spoke_vm_osType": "Linux",
    "global_spoke_vm_diskSizeGB": "30",
    "global_spoke_vm_diskType": "Standard_LRS",
    "global_routetable_name": "spoke-route-table",

    "COMMENT_nsg": "NSG TEMPLATE VARIABLES",
    "nsg_mgmt_inbound_rule_name": "allow-inbound-https-ssh",
    "nsg_mgmt_inbound_rule_sourceAddress": "0.0.0.0/0",
    "nsg_mgmt_inbound_rule_ports": ["22", "443"],
    "nsg_data_inbound_rule_name": "allow-all-inbound",
    "nsg_data_outbound_rule_name": "allow-all-outbound",

    "COMMENT_vnet": "NEW VNET TEMPLATE VARIABLES",
    "spoke1_vnet_cidr": "172.17.0.0/16",
    "spoke1_subnet_cidr": "172.17.0.0/24",
    "spoke1_to_vnet_peer_name": "spoke1-to-transit",

    "COMMENT_spoke1": "SPOKE1 VM VARIABLES",
    "spoke1_vm_name": "spoke1-vm-ubuntu",
    "spoke1_vm_nic_name": "spoke1-vm-nic0",
    "spoke1_vm_nic_ip": "172.17.0.4"


  },
  "resources": [
        {
      "comments": "CREATE VIRTUAL NETWORK WITH 4 SUBNETS",
      "type": "Microsoft.Resources/deployments",
      "name": "CREATE_VNET",
      "apiVersion": "[variables('global_var_apiVersion')]",
      "resourceGroup": "[variables('global_vnet_resource_group')]",

      "condition": "[equals(variables('global_vnet_option'), 'Create new VNET')]",
      "properties": {
        "mode": "Incremental",
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "resources": [
            {
              "type": "Microsoft.Network/virtualNetworks",
              "name": "[variables('global_spoke1_vnet_name')]",
              "apiVersion": "[variables('global_var_apiVersion')]",
              "location": "[resourceGroup().location]",
              "properties": {
                "addressSpace": {
                  "addressPrefixes": [
                    "[variables('spoke1_vnet_cidr')]"
                  ]
                },
                "subnets": [
                  {
                    "name": "[variables('global_spoke1_subnet_name')]",
                    "properties": {
                      "addressPrefix": "[variables('spoke1_subnet_cidr')]",
                      "routeTable": {
                        "id": "[resourceId('Microsoft.Network/routeTables', variables('global_routetable_name'))]"
                      }
                    }
                  }
                ]
              }
            }
          ]
        }
      }
    },
    {
      "comments": "CREATE SPOKE1 VM WITH NIC",
      "type": "Microsoft.Resources/deployments",
      "name": "CREATE_SPOKE1_VM",
      "apiVersion": "[variables('global_var_apiVersion')]",
      "resourceGroup": "[variables('global_spoke1_resource_group')]",
      "dependsOn": [
        "CREATE_VNET"
      ],
      "properties": {
        "mode": "Incremental",
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "resources": [
            {
              "comments": "CREATE_SPOKE1_VM_NIC",
              "type": "Microsoft.Network/networkInterfaces",
              "name": "[variables('spoke1_vm_nic_name')]",
              "apiVersion": "[variables('global_var_apiVersion')]",
              "location": "[resourceGroup().location]",
              "properties": {
                "ipConfigurations": [
                  {
                    "name": "ipconfig1",
                    "properties": {
                      "privateIpAddress": "[variables('spoke1_vm_nic_ip')]",
                      "privateIPAllocationMethod": "[variables('global_var_allocationMethod')]",
                      "subnet": {
                        "id": "[concat(resourceId('Microsoft.Network/virtualNetworks', variables('global_spoke1_vnet_name')), '/subnets/', variables('global_spoke1_subnet_name'))]"
                      },
                      "primary": true,
                      "privateIPAddressVersion": "[variables('global_var_networkVersion')]"
                    }
                  }
                ],
                "enableAcceleratedNetworking": "[variables('global_fw_enableAcceleratedNetworking')]",
                "enableIPForwarding": false
              }
            },
            {
              "comments": "CREATE_SPOKE1_VM",
              "type": "Microsoft.Compute/virtualMachines",
              "name": "[variables('spoke1_vm_name')]",
              "apiVersion": "[variables('global_var_apiVersion')]",
              "location": "[resourceGroup().location]",
              "properties": {
                "hardwareProfile": {
                  "vmSize": "[variables('global_spoke_vm_vmSize')]"
                },
                "storageProfile": {
                  "imageReference": {
                    "publisher": "[variables('global_spoke_vm_publisher')]",
                    "offer": "[variables('global_spoke_vm_offer')]",
                    "sku": "[variables('global_spoke_vm_sku')]",
                    "version": "[variables('global_spoke_vm_version')]"
                  },
                  "osDisk": {
                    "osType": "[variables('global_spoke_vm_osType')]",
                    "createOption": "FromImage",
                    "caching": "ReadWrite",
                    "managedDisk": {
                      "storageAccountType": "[variables('global_spoke_vm_diskType')]"
                    },
                    "diskSizeGB": "[variables('global_spoke_vm_diskSizeGB')]"
                  }
                },
                "osProfile": {
                  "computerName": "[variables('spoke1_vm_name')]",
                  "adminUsername": "[variables('global_fw_adminUsername')]",
                  "adminPassword": "[variables('global_fw_adminPassword')]",
                  "linuxConfiguration": {
                    "disablePasswordAuthentication": false,
                    "provisionVMAgent": true
                  },
                  "allowExtensionOperations": true
                },
                "networkProfile": {
                  "networkInterfaces": [
                    {
                      "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('spoke1_vm_nic_name'))]",
                      "properties": {
                        "primary": true
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/networkInterfaces', variables('spoke1_vm_nic_name'))]"
              ]
            }
          ]
        }
      }
    }
  ]
}
